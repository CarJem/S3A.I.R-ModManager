<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:gen="clr-namespace:GenerationsLib.WPF.Controls;assembly=GenerationsLib.WPF"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:local="clr-namespace:Sonic3AIR_ModManager">
    <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">None</PopupAnimation>
    <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type xctk:ColorPicker}" x:Key="ColorPicker">
        <Setter Property="Background" Value="{DynamicResource Button.Disabled.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}"/>
        <Setter Property="BorderThickness" Value="1,1,0,1"/>
        <Setter Property="ButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Grid SnapsToDevicePixels="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <xctk:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" CornerRadius="0" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}">
                                            <xctk:ButtonChrome.Visibility>
                                                <Binding Path="ShowDropDownButton" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                    <Binding.Converter>
                                                        <BooleanToVisibilityConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </xctk:ButtonChrome.Visibility>
                                            <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                <Path x:Name="Arrow" Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Height="5" Margin="0,1,0,0" Width="9"/>
                                            </Grid>
                                        </xctk:ButtonChrome>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MaxDropDownWidth" Value="250"/>
        <Setter Property="HeaderBackground" Value="AliceBlue"/>
        <Setter Property="DropDownBackground" Value="{DynamicResource ComboBoxBackground}"/>
        <Setter Property="TabBackground" Value="{DynamicResource EnabledTab}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                    <Grid>
                        <ToggleButton x:Name="PART_ColorPickerToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="22" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ToggleButton.IsHitTestVisible>
                                <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <xctk:InverseBoolConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </ToggleButton.IsHitTestVisible>
                            <Border Margin="2" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1">
                                <Grid>
                                    <ContentControl x:Name="ColorOnly">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Border>
                                                                <Border.Background>
                                                                    <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                        <DrawingBrush.Drawing>
                                                                            <DrawingGroup>
                                                                                <GeometryDrawing Brush="White">
                                                                                    <GeometryDrawing.Geometry>
                                                                                        <RectangleGeometry Rect="0,0,100,100"/>
                                                                                    </GeometryDrawing.Geometry>
                                                                                </GeometryDrawing>
                                                                                <GeometryDrawing Brush="LightGray">
                                                                                    <GeometryDrawing.Geometry>
                                                                                        <GeometryGroup>
                                                                                            <RectangleGeometry Rect="0,0,50,50"/>
                                                                                            <RectangleGeometry Rect="50,50,50,50"/>
                                                                                        </GeometryGroup>
                                                                                    </GeometryDrawing.Geometry>
                                                                                </GeometryDrawing>
                                                                            </DrawingGroup>
                                                                        </DrawingBrush.Drawing>
                                                                    </DrawingBrush>
                                                                </Border.Background>
                                                                <Rectangle>
                                                                    <Rectangle.Fill>
                                                                        <Binding Path="SelectedColor" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                            <Binding.Converter>
                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </Rectangle.Fill>
                                                                </Rectangle>
                                                            </Border>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
                                        <StackPanel Orientation="Horizontal">
                                            <ContentControl BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" HorizontalAlignment="Left" Margin="2,1,4,1" Width="20">
                                                <ContentControl.Style>
                                                    <Style TargetType="{x:Type ContentControl}">
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <Border>
                                                                        <Border.Background>
                                                                            <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                <DrawingBrush.Drawing>
                                                                                    <DrawingGroup>
                                                                                        <GeometryDrawing Brush="White">
                                                                                            <GeometryDrawing.Geometry>
                                                                                                <RectangleGeometry Rect="0,0,100,100"/>
                                                                                            </GeometryDrawing.Geometry>
                                                                                        </GeometryDrawing>
                                                                                        <GeometryDrawing Brush="LightGray">
                                                                                            <GeometryDrawing.Geometry>
                                                                                                <GeometryGroup>
                                                                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                </GeometryGroup>
                                                                                            </GeometryDrawing.Geometry>
                                                                                        </GeometryDrawing>
                                                                                    </DrawingGroup>
                                                                                </DrawingBrush.Drawing>
                                                                            </DrawingBrush>
                                                                        </Border.Background>
                                                                        <Rectangle>
                                                                            <Rectangle.Fill>
                                                                                <Binding Path="SelectedColor" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                                    <Binding.Converter>
                                                                                        <xctk:ColorToSolidColorBrushConverter/>
                                                                                    </Binding.Converter>
                                                                                </Binding>
                                                                            </Rectangle.Fill>
                                                                        </Rectangle>
                                                                    </Border>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                            <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </Border>
                        </ToggleButton>
                        <Popup x:Name="PART_ColorPickerPalettePopup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_ColorPickerToggleButton}" PopupAnimation="Slide" StaysOpen="False" ToolTip="" VerticalOffset="1" VerticalAlignment="Bottom" Width="{TemplateBinding MaxDropDownWidth}">
                            <Popup.Resources>
                                <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1" Background="{DynamicResource NormalBackground}" Padding="3">
                                <TabControl x:Name="ColorPickerTabControl" Background="Transparent" SelectedIndex="1">
                                    <xctk:ColorPickerTabItem x:Name="StandardTabItem" Background="{DynamicResource DisabledTab}" Foreground="{DynamicResource NormalText}" Header="{Binding StandardTabHeader, RelativeSource={RelativeSource TemplatedParent}}">
                                        <xctk:ColorPickerTabItem.Template>
                                            <ControlTemplate TargetType="{x:Type xctk:ColorPickerTabItem}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Border x:Name="mainBorder" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                                        <Border x:Name="innerBorder" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="-1" Opacity="0"/>
                                                    </Border>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.ZIndex" Value="1"/>
                                                        <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                                        <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </xctk:ColorPickerTabItem.Template>
                                        <Grid x:Name="_colorPaletteHost" Margin="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="1">
                                                <Grid.Visibility>
                                                    <TemplateBinding Property="ShowAvailableColors">
                                                        <TemplateBinding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </Grid.Visibility>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Background="{TemplateBinding HeaderBackground}" Foreground="{TemplateBinding HeaderForeground}" Margin="0,0,0,1" Padding="2" Text="{TemplateBinding AvailableColorsHeader}"/>
                                                    <ListBox x:Name="PART_AvailableColors" Grid.Row="1">
                                                        <ListBox.Style>
                                                            <Style TargetType="{x:Type ListBox}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="MaxHeight" Value="500"/>
                                                                <Setter Property="Width">
                                                                    <Setter.Value>
                                                                        <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                            <Binding.Converter>
                                                                                <xctk:AdditionConverter/>
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemsPanel">
                                                                    <Setter.Value>
                                                                        <ItemsPanelTemplate>
                                                                            <WrapPanel IsItemsHost="True">
                                                                                <WrapPanel.Width>
                                                                                    <Binding ConverterParameter="-4" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}">
                                                                                        <Binding.Converter>
                                                                                            <xctk:AdditionConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </WrapPanel.Width>
                                                                            </WrapPanel>
                                                                        </ItemsPanelTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemContainerStyle">
                                                                    <Setter.Value>
                                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                        <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                                            <Grid.Resources>
                                                                                                <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                                    <Style.Triggers>
                                                                                                        <Trigger Property="Content" Value="">
                                                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                        </Trigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Grid.Resources>
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                            <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                            </Border>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                            </Trigger>
                                                                                            <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                                <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                                            </DataTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <Grid>
                                                                                <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                                    <Border.Background>
                                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                            <DrawingBrush.Drawing>
                                                                                                <DrawingGroup>
                                                                                                    <GeometryDrawing Brush="White">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <GeometryGroup>
                                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                            </GeometryGroup>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                </DrawingGroup>
                                                                                            </DrawingBrush.Drawing>
                                                                                        </DrawingBrush>
                                                                                    </Border.Background>
                                                                                    <Rectangle Height="14" Width="14">
                                                                                        <Rectangle.Style>
                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                <Setter Property="Fill">
                                                                                                    <Setter.Value>
                                                                                                        <Binding Path="Color">
                                                                                                            <Binding.Converter>
                                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                                            </Binding.Converter>
                                                                                                        </Binding>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Rectangle.Style>
                                                                                    </Rectangle>
                                                                                </Border>
                                                                            </Grid>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="SelectionMode" Value="Single"/>
                                                            </Style>
                                                        </ListBox.Style>
                                                    </ListBox>
                                                </Grid>
                                            </Grid>
                                            <Grid Grid.Row="2">
                                                <Grid.Visibility>
                                                    <TemplateBinding Property="ShowStandardColors">
                                                        <TemplateBinding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </Grid.Visibility>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Background="{TemplateBinding HeaderBackground}" Foreground="{TemplateBinding HeaderForeground}" Margin="0,1" Padding="2" Text="{TemplateBinding StandardColorsHeader}"/>
                                                    <ListBox x:Name="PART_StandardColors" Grid.Row="1">
                                                        <ListBox.Style>
                                                            <Style TargetType="{x:Type ListBox}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="MaxHeight" Value="500"/>
                                                                <Setter Property="Width">
                                                                    <Setter.Value>
                                                                        <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                            <Binding.Converter>
                                                                                <xctk:AdditionConverter/>
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemsPanel">
                                                                    <Setter.Value>
                                                                        <ItemsPanelTemplate>
                                                                            <WrapPanel IsItemsHost="True">
                                                                                <WrapPanel.Width>
                                                                                    <Binding ConverterParameter="-4" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}">
                                                                                        <Binding.Converter>
                                                                                            <xctk:AdditionConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </WrapPanel.Width>
                                                                            </WrapPanel>
                                                                        </ItemsPanelTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemContainerStyle">
                                                                    <Setter.Value>
                                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                        <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                                            <Grid.Resources>
                                                                                                <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                                    <Style.Triggers>
                                                                                                        <Trigger Property="Content" Value="">
                                                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                        </Trigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Grid.Resources>
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                            <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                            </Border>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                            </Trigger>
                                                                                            <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                                <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                                            </DataTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <Grid>
                                                                                <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                                    <Border.Background>
                                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                            <DrawingBrush.Drawing>
                                                                                                <DrawingGroup>
                                                                                                    <GeometryDrawing Brush="White">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <GeometryGroup>
                                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                            </GeometryGroup>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                </DrawingGroup>
                                                                                            </DrawingBrush.Drawing>
                                                                                        </DrawingBrush>
                                                                                    </Border.Background>
                                                                                    <Rectangle Height="14" Width="14">
                                                                                        <Rectangle.Style>
                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                <Setter Property="Fill">
                                                                                                    <Setter.Value>
                                                                                                        <Binding Path="Color">
                                                                                                            <Binding.Converter>
                                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                                            </Binding.Converter>
                                                                                                        </Binding>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Rectangle.Style>
                                                                                    </Rectangle>
                                                                                </Border>
                                                                            </Grid>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="SelectionMode" Value="Single"/>
                                                            </Style>
                                                        </ListBox.Style>
                                                    </ListBox>
                                                </Grid>
                                            </Grid>
                                            <Grid Margin="0,1" Grid.Row="3">
                                                <Grid.Visibility>
                                                    <TemplateBinding Property="ShowRecentColors">
                                                        <TemplateBinding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </Grid.Visibility>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="22"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Background="{TemplateBinding HeaderBackground}" Foreground="{TemplateBinding HeaderForeground}" Margin="0,1" Padding="2" Text="{TemplateBinding RecentColorsHeader}"/>
                                                    <ListBox x:Name="PART_RecentColors" Grid.Row="1">
                                                        <ListBox.Style>
                                                            <Style TargetType="{x:Type ListBox}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="MaxHeight" Value="500"/>
                                                                <Setter Property="Width">
                                                                    <Setter.Value>
                                                                        <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                                                            <Binding.Converter>
                                                                                <xctk:AdditionConverter/>
                                                                            </Binding.Converter>
                                                                        </Binding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemsPanel">
                                                                    <Setter.Value>
                                                                        <ItemsPanelTemplate>
                                                                            <WrapPanel IsItemsHost="True">
                                                                                <WrapPanel.Width>
                                                                                    <Binding ConverterParameter="-4" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}">
                                                                                        <Binding.Converter>
                                                                                            <xctk:AdditionConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </WrapPanel.Width>
                                                                            </WrapPanel>
                                                                        </ItemsPanelTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemContainerStyle">
                                                                    <Setter.Value>
                                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                                            <Setter Property="ToolTip" Value="{Binding Name}"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                        <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                                                                                            <Grid.Resources>
                                                                                                <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                                                                                    <Style.Triggers>
                                                                                                        <Trigger Property="Content" Value="">
                                                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                        </Trigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Grid.Resources>
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                            <Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                                                <Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                                                            </Border>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                                <Setter Property="BorderBrush" TargetName="_outerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                                <Setter Property="BorderBrush" TargetName="_innerBorder" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonMouseOverBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                                                                                            </Trigger>
                                                                                            <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                                                                                                <Setter Property="ToolTip" TargetName="mainGrid" Value=""/>
                                                                                            </DataTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="ItemTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <Grid>
                                                                                <Border BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" BorderThickness="1" Margin="2">
                                                                                    <Border.Background>
                                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                            <DrawingBrush.Drawing>
                                                                                                <DrawingGroup>
                                                                                                    <GeometryDrawing Brush="White">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <GeometryGroup>
                                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                            </GeometryGroup>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                </DrawingGroup>
                                                                                            </DrawingBrush.Drawing>
                                                                                        </DrawingBrush>
                                                                                    </Border.Background>
                                                                                    <Rectangle Height="14" Width="14">
                                                                                        <Rectangle.Style>
                                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                                <Setter Property="Fill">
                                                                                                    <Setter.Value>
                                                                                                        <Binding Path="Color">
                                                                                                            <Binding.Converter>
                                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                                            </Binding.Converter>
                                                                                                        </Binding>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Rectangle.Style>
                                                                                    </Rectangle>
                                                                                </Border>
                                                                            </Grid>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="SelectionMode" Value="Single"/>
                                                            </Style>
                                                        </ListBox.Style>
                                                    </ListBox>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                    <xctk:ColorPickerTabItem x:Name="AdvancedTabItem" Background="{DynamicResource EnabledTab}" Foreground="{DynamicResource NormalText}" Header="{Binding AdvancedTabHeader, RelativeSource={RelativeSource TemplatedParent}}">
                                        <xctk:ColorPickerTabItem.Template>
                                            <ControlTemplate TargetType="{x:Type xctk:ColorPickerTabItem}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                                    <Border x:Name="mainBorder" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                                        <Border x:Name="innerBorder" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="-1" Opacity="0"/>
                                                    </Border>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Panel.ZIndex" Value="1"/>
                                                        <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                                        <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </xctk:ColorPickerTabItem.Template>
                                        <Grid x:Name="_colorCanvasHost">
                                            <Grid.Width>
                                                <Binding ConverterParameter="-18" Path="MaxDropDownWidth" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <xctk:AdditionConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Grid.Width>
                                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                                                <xctk:ColorCanvas BorderThickness="0" Background="Transparent" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <xctk:ColorCanvas.Template>
                                                        <ControlTemplate TargetType="{x:Type xctk:ColorCanvas}">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="3">
                                                                <Grid Margin="2">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="Auto"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="200"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Border BorderBrush="DarkGray" BorderThickness="1" ClipToBounds="True">
                                                                            <Border.Background>
                                                                                <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                    <DrawingBrush.Drawing>
                                                                                        <DrawingGroup>
                                                                                            <GeometryDrawing Brush="White">
                                                                                                <GeometryDrawing.Geometry>
                                                                                                    <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                </GeometryDrawing.Geometry>
                                                                                            </GeometryDrawing>
                                                                                            <GeometryDrawing Brush="LightGray">
                                                                                                <GeometryDrawing.Geometry>
                                                                                                    <GeometryGroup>
                                                                                                        <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                        <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                    </GeometryGroup>
                                                                                                </GeometryDrawing.Geometry>
                                                                                            </GeometryDrawing>
                                                                                        </DrawingGroup>
                                                                                    </DrawingBrush.Drawing>
                                                                                </DrawingBrush>
                                                                            </Border.Background>
                                                                            <Canvas x:Name="PART_ColorShadingCanvas" HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="200">
                                                                                <Rectangle x:Name="ColorShadingRectangle" Height="{Binding Height, ElementName=PART_ColorShadingCanvas}" Width="{Binding Width, ElementName=PART_ColorShadingCanvas}">
                                                                                    <Rectangle.Fill>
                                                                                        <Binding ElementName="PART_SpectrumSlider" Path="SelectedColor">
                                                                                            <Binding.Converter>
                                                                                                <xctk:ColorToSolidColorBrushConverter/>
                                                                                            </Binding.Converter>
                                                                                        </Binding>
                                                                                    </Rectangle.Fill>
                                                                                </Rectangle>
                                                                                <Rectangle x:Name="WhiteGradient" Height="{Binding Height, ElementName=PART_ColorShadingCanvas}" Width="{Binding Width, ElementName=PART_ColorShadingCanvas}">
                                                                                    <Rectangle.Fill>
                                                                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                                            <GradientStop Color="White" Offset="0"/>
                                                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Rectangle.Fill>
                                                                                </Rectangle>
                                                                                <Rectangle x:Name="BlackGradient" Height="{Binding Height, ElementName=PART_ColorShadingCanvas}" Width="{Binding Width, ElementName=PART_ColorShadingCanvas}">
                                                                                    <Rectangle.Fill>
                                                                                        <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                                                                            <GradientStop Color="Black" Offset="0"/>
                                                                                            <GradientStop Color="#00000000" Offset="1"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Rectangle.Fill>
                                                                                </Rectangle>
                                                                                <Canvas x:Name="PART_ColorShadeSelector" Height="10" IsHitTestVisible="False" Width="10">
                                                                                    <Ellipse Height="10" IsHitTestVisible="False" Stroke="White" StrokeThickness="3" Width="10"/>
                                                                                    <Ellipse Height="10" IsHitTestVisible="False" Stroke="Black" StrokeThickness="1" Width="10"/>
                                                                                </Canvas>
                                                                            </Canvas>
                                                                        </Border>
                                                                        <Border Margin="0,5,0,0" Grid.Row="1">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border x:Name="SelectedColorBorder" BorderBrush="{DynamicResource ButtonBorder}" BorderThickness="1" Height="22" Margin="2,0">
                                                                                    <Border.Background>
                                                                                        <DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
                                                                                            <DrawingBrush.Drawing>
                                                                                                <DrawingGroup>
                                                                                                    <GeometryDrawing Brush="White">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <RectangleGeometry Rect="0,0,100,100"/>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                    <GeometryDrawing Brush="LightGray">
                                                                                                        <GeometryDrawing.Geometry>
                                                                                                            <GeometryGroup>
                                                                                                                <RectangleGeometry Rect="0,0,50,50"/>
                                                                                                                <RectangleGeometry Rect="50,50,50,50"/>
                                                                                                            </GeometryGroup>
                                                                                                        </GeometryDrawing.Geometry>
                                                                                                    </GeometryDrawing>
                                                                                                </DrawingGroup>
                                                                                            </DrawingBrush.Drawing>
                                                                                        </DrawingBrush>
                                                                                    </Border.Background>
                                                                                    <Rectangle x:Name="SelectedColor">
                                                                                        <Rectangle.Fill>
                                                                                            <Binding Path="SelectedColor" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                                <Binding.Converter>
                                                                                                    <xctk:ColorToSolidColorBrushConverter/>
                                                                                                </Binding.Converter>
                                                                                            </Binding>
                                                                                        </Rectangle.Fill>
                                                                                    </Rectangle>
                                                                                </Border>
                                                                                <TextBox x:Name="PART_HexadecimalTextBox" Grid.Column="1" Foreground="{DynamicResource NormalText}" Margin="2,0" VerticalAlignment="Center">
                                                                                    <TextBox.Style>
                                                                                        <Style TargetType="{x:Type TextBox}">
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Style.BasedOn>
                                                                                                <Style TargetType="{x:Type TextBox}">
                                                                                                    <Style.BasedOn>
                                                                                                        <Style TargetType="{x:Type TextBoxBase}">
                                                                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                                                                                                            <Setter Property="BorderBrush" Value="#FFABADB3"/>
                                                                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                                                            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                                                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                            <Setter Property="AllowDrop" Value="True"/>
                                                                                                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                                                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                                                                            <Setter Property="Template">
                                                                                                                <Setter.Value>
                                                                                                                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                                                                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                                                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                                                                                        </Border>
                                                                                                                        <ControlTemplate.Triggers>
                                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                                                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                                                                                            </Trigger>
                                                                                                                        </ControlTemplate.Triggers>
                                                                                                                    </ControlTemplate>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>
                                                                                                            <Style.Triggers>
                                                                                                                <MultiTrigger>
                                                                                                                    <MultiTrigger.Conditions>
                                                                                                                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                                                                                                                        <Condition Property="IsSelectionActive" Value="False"/>
                                                                                                                    </MultiTrigger.Conditions>
                                                                                                                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                                                                                </MultiTrigger>
                                                                                                            </Style.Triggers>
                                                                                                        </Style>
                                                                                                    </Style.BasedOn>
                                                                                                </Style>
                                                                                            </Style.BasedOn>
                                                                                            <Style.Triggers>
                                                                                                <Trigger Property="IsFocused" Value="False">
                                                                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                                </Trigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </TextBox.Style>
                                                                                </TextBox>
                                                                            </Grid>
                                                                        </Border>
                                                                        <Border ClipToBounds="False" Grid.Column="1" Margin="4,-8,0,0" Grid.RowSpan="2">
                                                                            <xctk:ColorSpectrumSlider x:Name="PART_SpectrumSlider" VerticalAlignment="Stretch"/>
                                                                        </Border>
                                                                    </Grid>
                                                                    <Border x:Name="RGBBorder" BorderThickness="1" ClipToBounds="True" Margin="0,10,0,0" MinWidth="180" Grid.Row="1">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="44"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="Auto"/>
                                                                                <RowDefinition Height="Auto"/>
                                                                                <RowDefinition Height="Auto"/>
                                                                                <RowDefinition Height="Auto"/>
                                                                            </Grid.RowDefinitions>
                                                                            <TextBlock Grid.Column="0" Foreground="{DynamicResource NormalText}" Grid.Row="0" Text="R" VerticalAlignment="Center"><Run Text="R"/></TextBlock>
                                                                            <Slider x:Name="PART_RSlider" Grid.Column="1" LargeChange="10" Maximum="255" Margin="4,6" Grid.Row="0" SmallChange="1" TickFrequency="1" Value="{Binding R, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                                                                            <xctk:ByteUpDown Background="Transparent" Grid.Column="2" Foreground="{DynamicResource NormalText}" Grid.Row="0" Text="" Value="{Binding Value, ElementName=PART_RSlider}" VerticalAlignment="Center"/>
                                                                            <TextBlock Grid.Column="0" Foreground="{DynamicResource NormalText}" Grid.Row="1" Text="G" VerticalAlignment="Center"><Run Text="G"/></TextBlock>
                                                                            <Slider x:Name="PART_GSlider" Grid.Column="1" LargeChange="10" Maximum="255" Margin="4,6" Grid.Row="1" SmallChange="1" TickFrequency="1" Value="{Binding G, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                                                                            <xctk:ByteUpDown Background="Transparent" Grid.Column="2" Foreground="{DynamicResource NormalText}" Grid.Row="1" Text="" Value="{Binding Value, ElementName=PART_GSlider}" VerticalAlignment="Center"/>
                                                                            <TextBlock Grid.Column="0" Foreground="{DynamicResource NormalText}" Grid.Row="2" Text="B" VerticalAlignment="Center"><Run Text="B"/></TextBlock>
                                                                            <Slider x:Name="PART_BSlider" Grid.Column="1" LargeChange="10" Maximum="255" Margin="4,6" Grid.Row="2" SmallChange="1" TickFrequency="1" Value="{Binding B, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
                                                                            <xctk:ByteUpDown Background="Transparent" Grid.Column="3" Foreground="{DynamicResource NormalText}" Grid.Row="2" Text="" Value="{Binding Value, ElementName=PART_BSlider}" VerticalAlignment="Center"/>
                                                                            <TextBlock Grid.Column="0" Foreground="{DynamicResource NormalText}" Grid.Row="3" Text="A" VerticalAlignment="Center">
                                                                                <TextBlock.Visibility>
                                                                                    <Binding Path="UsingAlphaChannel" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                        <Binding.Converter>
                                                                                            <BooleanToVisibilityConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </TextBlock.Visibility><Run Text="A"/></TextBlock>
                                                                            <Slider x:Name="PART_OpacitySlider" Grid.Column="1" LargeChange="10" Maximum="255" Margin="4,6" Grid.Row="3" SmallChange="1" Value="{Binding A, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center">
                                                                                <Slider.Visibility>
                                                                                    <Binding Path="UsingAlphaChannel" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                        <Binding.Converter>
                                                                                            <BooleanToVisibilityConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </Slider.Visibility>
                                                                            </Slider>
                                                                            <xctk:ByteUpDown Background="Transparent" Grid.Column="3" Foreground="{DynamicResource NormalText}" Grid.Row="3" Text="" Value="{Binding Value, ElementName=PART_OpacitySlider}" VerticalAlignment="Center">
                                                                                <xctk:ByteUpDown.Visibility>
                                                                                    <Binding Path="UsingAlphaChannel" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                        <Binding.Converter>
                                                                                            <BooleanToVisibilityConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </xctk:ByteUpDown.Visibility>
                                                                            </xctk:ByteUpDown>
                                                                        </Grid>
                                                                    </Border>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                </Trigger>
                                                                <Trigger Property="SelectedColor" Value="{x:Null}">
                                                                    <Setter Property="Visibility" TargetName="PART_ColorShadeSelector" Value="Collapsed"/>
                                                                    <Setter Property="Background" TargetName="SelectedColorBorder" Value="Transparent"/>
                                                                    <Setter Property="IsEnabled" TargetName="RGBBorder" Value="False"/>
                                                                    <Setter Property="TextElement.Foreground" TargetName="RGBBorder" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </xctk:ColorCanvas.Template>
                                                </xctk:ColorCanvas>
                                            </ScrollViewer>
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                </TabControl>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayColorAndName" Value="True">
                            <Setter Property="Visibility" TargetName="ColorOnly" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="ColorAndName" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ShowTabHeaders" Value="False">
                            <Setter Property="Visibility" TargetName="StandardTabItem" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="AdvancedTabItem" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ShowDropDownButton" Value="False">
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type xctk:ButtonSpinner}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="firstContentColumn" Width="*"/>
                                <ColumnDefinition x:Name="secondContentColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid x:Name="gridContent" Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="PART_IncreaseButton" IsTabStop="{TemplateBinding IsTabStop}" Foreground="{DynamicResource NormalText}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Data="M0,5L4.5,0.5 9,5 6,5 4.5,3.5 3,5z" Focusable="False" Fill="{DynamicResource NormalText}" HorizontalAlignment="Center" Height="5" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="9"/>
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                                <RepeatButton x:Name="PART_DecreaseButton" IsTabStop="{TemplateBinding IsTabStop}" Grid.Row="1" Foreground="{DynamicResource NormalText}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Focusable="False" Fill="{DynamicResource NormalText}" HorizontalAlignment="Center" Height="5" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="9"/>
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowButtonSpinner" Value="False">
                            <Setter Property="Visibility" TargetName="gridContent" Value="Hidden"/>
                            <Setter Property="Width" TargetName="gridContent" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource Button.Disabled.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" SourceName="PART_IncreaseButton" Value="False">
                            <Setter Property="ContentTemplate" TargetName="PART_IncreaseButton">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Data="M0,5L4.5,0.5 9,5 6,5 4.5,3.5 3,5z" Focusable="False" Fill="{DynamicResource DisabledText}" HorizontalAlignment="Center" Height="5" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="9"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" SourceName="PART_DecreaseButton" Value="False">
                            <Setter Property="ContentTemplate" TargetName="PART_DecreaseButton">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Focusable="False" Fill="{DynamicResource DisabledText}" HorizontalAlignment="Center" Height="5" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="9"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ButtonSpinnerLocation" Value="Left">
                            <Setter Property="Width" TargetName="firstContentColumn" Value="Auto"/>
                            <Setter Property="Width" TargetName="secondContentColumn" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="contentPresenter" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="gridContent" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Button x:Name="ToggleButtonChrome" Grid.Column="1">
                                <Button.Visibility>
                                    <Binding Path="ShowDropDownButton" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Button.Visibility>
                                <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                    <Path x:Name="Arrow" Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Fill="{DynamicResource NormalText}" Height="5" Margin="0,1,0,0" Width="9"/>
                                </Grid>
                            </Button>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource DisabledText}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>